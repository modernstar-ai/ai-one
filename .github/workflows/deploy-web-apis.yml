name: Deploy Web Apis
on:
  workflow_dispatch:
    inputs:
      reason:
        description: The reason for running the workflow
        required: false
        default: Manual run
      environment:
        description: "Select the App environment"
        required: true
        type: choice
        default: "Development"
        options:
          - Development
          - Test
          - Production

#on:
# push:
#   branches:
#     - main # Deploy on push to main branch

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  app-build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AGILE_CHAT_API_SRC: "./src/agile-chat-api"
      AGILE_CHAT_API_PUB: "./publish/agile-chat-api"
      AGILE_CHAT_API_NAME: ${{ vars.AGILE_CHAT_API_NAME }}
      AGILE_RAGCHAT_API_SRC: "./src/agile-ragchat-api"
      AGILE_RAGCHAT_API_PUB: "./publish/agile-ragchat-api"
      AGILE_RAGCHAT_API_NAME: ${{ vars.AGILE_RAGCHAT_API_NAME }}
      ENVIRONMENT: ${{ github.event.inputs.environment }} # Sets ENVIRONMENT based on input

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

        #############################################################
        ## Agile-Chat-Api- dotnet build and publish
      - name: Agile-Chat-Api- dotnet build and publish
        run: |          
          dotnet restore ${{ env.AGILE_CHAT_API_SRC }}
          dotnet build ${{ env.AGILE_CHAT_API_SRC }} --no-restore --configuration Release
          dotnet publish ${{ env.AGILE_CHAT_API_SRC }} -c Release -o ${{ env.AGILE_CHAT_API_PUB }} 

          #############################################################

      #   ## Agile-RagChat-Web- dotnet build and publish
      # - name: Agile-RagChat-Web- dotnet build and publish
      #   run: |
      #     dotnet restore ${{ env.AGILE_RAGCHAT_API_SRC }}
      #     dotnet build ${{ env.AGILE_RAGCHAT_API_SRC }} --no-restore --configuration Release
      #     dotnet publish ${{ env.AGILE_RAGCHAT_API_SRC }} -c Release -o ${{ env.AGILE_RAGCHAT_API_PUB }}

        #############################################################

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

        #############################################################

      - name: Deploy - Agile-Chat-Api
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AGILE_CHAT_API_NAME }}
          package: ${{ env.AGILE_CHAT_API_PUB }}

      #############################################################

      # - name: Deploy - Agile-RagChat-Api
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AGILE_RAGCHAT_API_NAME }}
      #     package: ${{ env.AGILE_RAGCHAT_API_PUB }}

      #############################################################
