name: PROD-Deploy

# Manually triggered workflow
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the Azure Deployment Environment'
        type: choice
        default: 'Production'
        options:
          - Development
          - Test
          - UAT
          - Production
      apiWebAppName:
        description: 'Enter the name of the Azure Web Api'
        type: string
        default: 'agile-aione-prod-apiapp'
      uiWebAppName:
        description: 'Azure Web App Name'
        type: string
        default: 'agile-aione-prod-webapp'

env:
  AGILE_CHAT_API_SRC: './src/Agile.Chat/Agile.Chat.Api'
  AGILE_CHAT_API_PUB: './publish/Agile.Chat/Agile.Chat.Api'
  AGILE_WEB_SRC: './src/agile-chat-web'
  VITE_AGILECHAT_API_URL: ${{ vars.VITE_AGILECHAT_API_URL }}
  VITE_AZURE_AD_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  VITE_AZURE_AD_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  #VITE_AGILECHAT_API_URL
  #VITE_AZURE_AD_CLIENT_ID
  #VITE_AZURE_AD_TENANT_ID

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read
  
jobs:
  build-and-deploy-api:
    environment: Production
    name: Build and Deploy AgileChat Web API
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        persist-credentials: true
        
    - uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Agile-Chat-Api - dotnet build and publish
      run: |
        dotnet restore ${{ env.AGILE_CHAT_API_SRC }}
        dotnet build ${{ env.AGILE_CHAT_API_SRC }} --no-restore --configuration Release
        dotnet publish ${{ env.AGILE_CHAT_API_SRC }} -c Release -o ${{ env.AGILE_CHAT_API_PUB }}
      env:
        ENVIRONMENT: ${{ github.event.inputs.environment }}
      
    - name: Deploy - Agile-Chat-Api
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ github.event.inputs.apiWebAppName }}
        package: ${{ env.AGILE_CHAT_API_PUB }}

  build-and-deploy-web:
    environment: Production
    name: Build and Deploy AgileChat Web UI
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        persist-credentials: true
        
    - uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Build Agile Chat Web App
      run: |
        cd ${{ env.AGILE_WEB_SRC }}
        npm install
        npm run build

    - name: Agile-Chat-Web - Zip artifact for deployment
      run: |
        cd ${{ env.AGILE_WEB_SRC }}
        zip -r ../../release.zip dist

    - name: Agile-Chat-Web - Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: release.zip
        
    - name: Deploy Agile Chat Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ github.event.inputs.uiWebAppName }}
        package: ./release.zip