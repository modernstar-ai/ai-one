# Backend API Deploy Pipeline (converted from GitHub Actions)
trigger: none

parameters:
  - name: environment
    type: string
    default: dev
    displayName: "Select the environment to deploy the API infrastructure"
    values:
      - dev
      - tst
      - uat
      - prod

  - name: apiWebAppName
    displayName: "Enter the name of the Api App"
    type: string
    default: "ag-aione-dev-apiapp"

  - name: deployInfra
    displayName: "Deploy API Infrastructure (set to false to skip infra deployment)"
    type: boolean
    default: true

variables:
  - name: environment
    value: ${{ parameters.environment }}
  - name: AGILE_CHAT_API_SRC
    value: "./src/Agile.Chat/Agile.Chat.Api"
  - name: AGILE_CHAT_API_PUB
    value: "./publish/Agile.Chat/Agile.Chat.Api"
  - name: AZURE_BICEP_API
    value: "./infra/backend/apiapp.bicep"

  # Environment-specific service connections
  - name: SERVICE_CONNECTION_DEV
    value: "dev-service-connection"
  - name: SERVICE_CONNECTION_TST
    value: "tst-service-connection"
  - name: SERVICE_CONNECTION_UAT
    value: "uat-service-connection"
  - name: SERVICE_CONNECTION_PROD
    value: "prod-service-connection"

stages:
  # Build Stage
  - stage: Build
    displayName: "Build Agile-Chat-Api"
    jobs:
      - job: BuildJob
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - checkout: self
            fetchDepth: 1
            persistCredentials: true

          - task: UseDotNet@2
            displayName: "Use .NET 8 SDK"
            inputs:
              version: "8.0.x"
              performMultiLevelLookup: true

          - script: |
              dotnet restore $(AGILE_CHAT_API_SRC)
              dotnet build $(AGILE_CHAT_API_SRC) --no-restore --configuration Release
              dotnet publish $(AGILE_CHAT_API_SRC) -c Release -o $(AGILE_CHAT_API_PUB)
            displayName: "Build and Publish Agile-Chat-Api"
            env:
              ENVIRONMENT: ${{ parameters.environment }}

          - task: PublishPipelineArtifact@1
            displayName: "Publish Agile-Chat-Api Artifact"
            inputs:
              targetPath: "$(AGILE_CHAT_API_PUB)"
              artifact: "agile-chat-api"
              publishLocation: "pipeline"

  # Deploy Stages for all environments
  - template: templates/deploy-backend-template.yml
    parameters:
      environment: dev
      stageName: DeployBackendDev
      serviceConnection: $(SERVICE_CONNECTION_DEV)
      apiWebAppName: ${{ parameters.apiWebAppName }}
      agileChatApiPub: $(AGILE_CHAT_API_PUB)
      azureBicepMain: $(AZURE_BICEP_API)
      dependsOn: Build
      deployInfra: ${{ parameters.deployInfra }}

  - template: templates/deploy-backend-template.yml
    parameters:
      environment: tst
      stageName: DeployBackendTst
      serviceConnection: $(SERVICE_CONNECTION_TST)
      apiWebAppName: ${{ parameters.apiWebAppName }}
      agileChatApiPub: $(AGILE_CHAT_API_PUB)
      azureBicepMain: $(AZURE_BICEP_API)
      dependsOn: DeployBackendDev
      deployInfra: ${{ parameters.deployInfra }}

  - template: templates/deploy-backend-template.yml
    parameters:
      environment: uat
      stageName: DeployBackendUat
      serviceConnection: $(SERVICE_CONNECTION_UAT)
      apiWebAppName: ${{ parameters.apiWebAppName }}
      agileChatApiPub: $(AGILE_CHAT_API_PUB)
      azureBicepMain: $(AZURE_BICEP_API)
      dependsOn: DeployBackendTst
      deployInfra: ${{ parameters.deployInfra }}

  - template: templates/deploy-backend-template.yml
    parameters:
      environment: prod
      stageName: DeployBackendProd
      serviceConnection: $(SERVICE_CONNECTION_PROD)
      apiWebAppName: ${{ parameters.apiWebAppName }}
      agileChatApiPub: $(AGILE_CHAT_API_PUB)
      azureBicepMain: $(AZURE_BICEP_API)
      dependsOn: DeployBackendUat
      deployInfra: ${{ parameters.deployInfra }}
