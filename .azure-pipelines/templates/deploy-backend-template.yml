
parameters:
- name: environment
  type: string
- name: serviceConnection
  type: string
- name: apiWebAppName
  type: string
- name: agileChatApiPub
  type: string
- name: azureBicepMain
  type: string
- name: stageName
  type: string
- name: dependsOn
  type: object
  
stages:
- stage: ${{ parameters.stageName }}
  displayName: 'Deploy ${{ parameters.environment }} environment'
  condition: eq(variables['environment'], '${{ parameters.environment }}')
  variables:
    - group: ${{ parameters.environment }}
  dependsOn: ${{ parameters.dependsOn }}
  jobs:
    - job: DeployInfra${{ parameters.environment }}
      displayName: 'Deploy API Infrastructure'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self
          fetchDepth: 1
          persistCredentials: true

        - task: AzureCLI@2
          displayName: 'Validate API Infrastructure (Bicep What-If)'
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              az deployment group validate \
                --resource-group $(AZURE_RESOURCE_GROUP) \
                --template-file ${{ parameters.azureBicepMain }} \
                --parameters ./infra/backend/${{ parameters.environment }}.bicepparam environmentName=${{ parameters.environment }}

        - task: AzureCLI@2
          displayName: 'Deploy API Infrastructure (Bicep Create)'
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              az deployment group create \
                --resource-group $(AZURE_RESOURCE_GROUP) \
                --template-file ${{ parameters.azureBicepMain }} \
                --parameters ./infra/backend/${{ parameters.environment }}.bicepparam environmentName=${{ parameters.environment }}

        - script: |
            echo "âœ… API Infrastructure Deployment: Completed"
            echo "ðŸ“‹ Environment: ${{ parameters.environment }}"
            echo "ðŸ“‹ Resource Group: $(AZURE_RESOURCE_GROUP)"
          displayName: 'Print Infra Deployment Summary'

    - job: DeployApp${{ parameters.environment }}
      displayName: 'Deploy Agile-Chat-Api to Azure Web App'
      dependsOn: DeployInfra${{ parameters.environment }}
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self
          fetchDepth: 1
          persistCredentials: true

        - task: DownloadPipelineArtifact@2
          displayName: 'Download Agile-Chat-Api Artifact'
          inputs:
            artifact: 'agile-chat-api'
            path: '${{ parameters.agileChatApiPub }}'

        - task: AzureWebApp@1
          displayName: 'Deploy Agile-Chat-Api to Azure Web App'
          inputs:
            appType: webAppLinux
            azureSubscription: ${{ parameters.serviceConnection }}
            appName: ${{ parameters.apiWebAppName }}
            package: ${{ parameters.agileChatApiPub }}

        - script: |
            echo "âœ… API Application Deployment: Completed"
            echo "ðŸŽ‰ Backend deployment successful!"
            echo "ðŸ“‹ Environment: ${{ parameters.environment }}"
            echo "ðŸ“‹ App Name: ${{ parameters.apiWebAppName }}"
          displayName: 'Print App Deployment Summary'
